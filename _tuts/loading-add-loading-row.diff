diff --git a/assets/js/RepLog/RepLogApp.js b/assets/js/RepLog/RepLogApp.js
index c695f467..6fb8b587 100644
--- a/assets/js/RepLog/RepLogApp.js
+++ b/assets/js/RepLog/RepLogApp.js
@@ -12,7 +12,8 @@ export default class RepLogApp extends Component {
             highlightedRowId: null,
             repLogs: [],
             numberOfHearts: 1,
-            isLoaded: false
+            isLoaded: false,
+            isSavingNewRepLog: false
         };
 
         this.handleRowClick = this.handleRowClick.bind(this);
@@ -41,12 +42,19 @@ export default class RepLogApp extends Component {
             item: item
         };
 
+        this.setState({
+            isSavingNewRepLog: true
+        });
+
         createRepLog(newRep)
             .then(repLog => {
                 this.setState(prevState => {
                     const newRepLogs = [...prevState.repLogs, repLog];
 
-                    return {repLogs: newRepLogs};
+                    return {
+                        repLogs: newRepLogs,
+                        isSavingNewRepLog: false
+                    };
                 })
             })
         ;
diff --git a/assets/js/RepLog/RepLogList.js b/assets/js/RepLog/RepLogList.js
index 669fccf7..f370d4c6 100644
--- a/assets/js/RepLog/RepLogList.js
+++ b/assets/js/RepLog/RepLogList.js
@@ -2,7 +2,7 @@ import React from 'react';
 import PropTypes from 'prop-types';
 
 export default function RepLogList(props) {
-    const { highlightedRowId, onRowClick, onDeleteRepLog, repLogs, isLoaded } = props;
+    const { highlightedRowId, onRowClick, onDeleteRepLog, repLogs, isLoaded, isSavingNewRepLog } = props;
 
     if (!isLoaded) {
         return (
@@ -38,6 +38,17 @@ export default function RepLogList(props) {
                 </td>
             </tr>
         ))}
+        {isSavingNewRepLog ? (
+            <tr>
+                <td
+                    colSpan="4"
+                    className="text-center"
+                    style={{
+                        opacity: .5
+                    }}
+                >Lifting to the database ...</td>
+            </tr>
+        ) : null}
         </tbody>
     );
 }
@@ -48,4 +59,5 @@ RepLogList.propTypes = {
     onDeleteRepLog: PropTypes.func.isRequired,
     repLogs: PropTypes.array.isRequired,
     isLoaded: PropTypes.bool.isRequired,
+    isSavingNewRepLog: PropTypes.bool.isRequired
 };
diff --git a/assets/js/RepLog/RepLogs.js b/assets/js/RepLog/RepLogs.js
index 1bb3396e..ad5dc145 100644
--- a/assets/js/RepLog/RepLogs.js
+++ b/assets/js/RepLog/RepLogs.js
@@ -15,7 +15,7 @@ function calculateTotalWeightLifted(repLogs) {
 }
 
 export default function RepLogs(props) {
-    const { withHeart, highlightedRowId, onRowClick, repLogs, onAddRepLog, numberOfHearts, onHeartChange, onDeleteRepLog, isLoaded } = props;
+    const { withHeart, highlightedRowId, onRowClick, repLogs, onAddRepLog, numberOfHearts, onHeartChange, onDeleteRepLog, isLoaded, isSavingNewRepLog } = props;
 
     let heart = '';
     if (withHeart) {
@@ -49,6 +49,7 @@ export default function RepLogs(props) {
                     onDeleteRepLog={onDeleteRepLog}
                     repLogs={repLogs}
                     isLoaded={isLoaded}
+                    isSavingNewRepLog={isSavingNewRepLog}
                 />
                 <tfoot>
                 <tr>
@@ -81,4 +82,5 @@ RepLogs.propTypes = {
     onHeartChange: PropTypes.func.isRequired,
     onDeleteRepLog: PropTypes.func.isRequired,
     isLoaded: PropTypes.bool.isRequired,
+    isSavingNewRepLog: PropTypes.bool.isRequired,
 };
