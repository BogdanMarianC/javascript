diff --git a/assets/js/RepLog/RepLogApp.js b/assets/js/RepLog/RepLogApp.js
index 6bca809e..abae3e5c 100644
--- a/assets/js/RepLog/RepLogApp.js
+++ b/assets/js/RepLog/RepLogApp.js
@@ -23,7 +23,15 @@ export default class RepLogApp extends Component {
     }
 
     handleNewItemSubmit(itemLabel, quantity) {
-        console.log(itemLabel, quantity);
+        const repLogs = this.state.repLogs;
+        const newRep = {
+            id: 'TODO-id',
+            reps: quantity,
+            itemLabel: itemLabel,
+            totalWeightLifted: Math.floor(Math.random() * 50)
+        };
+        repLogs.push(newRep);
+        this.setState({repLogs: repLogs});
     }
 
     render() {
diff --git a/assets/js/RepLog/RepLogs.js b/assets/js/RepLog/RepLogs.js
index efdba6be..41133224 100644
--- a/assets/js/RepLog/RepLogs.js
+++ b/assets/js/RepLog/RepLogs.js
@@ -29,11 +29,10 @@ export default class RepLogs extends Component {
         const quantityInput = this.quantityInput.current;
         const itemSelect = this.itemSelect.current;
 
-        console.log('I love when a good form submits!');
-        console.log(quantityInput.value);
-        console.log(itemSelect.options[itemSelect.selectedIndex].value);
-
-        //onNewItemSubmit('Big Fat Cat', event.target.elements.namedItem('reps').value);
+        onNewItemSubmit(
+            itemSelect.options[itemSelect.selectedIndex].text,
+            quantityInput.value
+        );
     }
 
     render() {
