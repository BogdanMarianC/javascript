diff --git a/assets/js/RepLog/RepLogApp.js b/assets/js/RepLog/RepLogApp.js
index ab3c7dba..ffe8d267 100644
--- a/assets/js/RepLog/RepLogApp.js
+++ b/assets/js/RepLog/RepLogApp.js
@@ -1,6 +1,7 @@
 import React, { Component } from 'react';
 import RepLogList from './RepLogList';
-import RepLogCreator from './RepLogCreator';
+//import RepLogCreator from './RepLogCreator';
+import RepLogCreator from './RepLogCreatorWithState';
 import uuid from 'uuid/v4';
 
 export default class RepLogApp extends Component {
diff --git a/assets/js/RepLog/RepLogCreatorWithState.js b/assets/js/RepLog/RepLogCreatorWithState.js
new file mode 100644
index 00000000..d2817722
--- /dev/null
+++ b/assets/js/RepLog/RepLogCreatorWithState.js
@@ -0,0 +1,69 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+export default function RepLogCreator(props) {
+    const { handleAddRepLog } = props;
+
+    let itemSelect = null;
+    let quantityInput = null;
+
+    function handleSubmit(e) {
+        e.preventDefault();
+
+        const itemLabel = itemSelect.options[itemSelect.selectedIndex].text;
+
+        handleAddRepLog(itemLabel, quantityInput.value);
+
+        quantityInput.value = '';
+        itemSelect.selectedIndex = 0;
+    }
+
+    const itemOptions = [
+        { id: 'cat', text: 'Cat' },
+        { id: 'fat_cat', text: 'Big Fat Cat' },
+        { id: 'laptop', text: 'My Laptop' },
+        { id: 'coffee_cup', text: 'Coffee Cup' },
+    ];
+
+    return (
+        <form className="form-inline" onSubmit={handleSubmit}>
+            <div className="form-group">
+                <label className="sr-only control-label required"
+                       htmlFor="rep_log_item">
+                    What did you lift?
+                </label>
+                <select id="rep_log_item"
+                        ref={(ref) => { itemSelect = ref; }}
+                        required="required"
+                        className="form-control">
+                    <option value="">What did you
+                        lift?
+                    </option>
+                    {itemOptions.map(option => {
+                        return <option value={option.id} key={option.id}>{option.text}</option>
+                    })}
+                </select>
+            </div>
+            {' '}
+            <div className="form-group">
+                <label className="sr-only control-label required"
+                       htmlFor="rep_log_reps">
+                    How many times?
+                </label>
+                <input type="number" id="rep_log_reps"
+                       ref={(ref) => { quantityInput = ref; }}
+                       required="required"
+                       placeholder="How many times?"
+                       className="form-control"/>
+            </div>
+            {' '}
+            <button type="submit" className="btn btn-primary">I Lifted
+                it!
+            </button>
+        </form>
+    );
+}
+
+RepLogCreator.propTypes = {
+    handleAddRepLog: PropTypes.func.isRequired,
+};
